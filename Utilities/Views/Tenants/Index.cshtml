@using Utilities.ViewModels
@model TenantsViewModel
@addTagHelper "*, Utilities"
@{
    ViewData["Title"] = "Квартиросъёмщики";
}
@Html.ActionLink("Create", "CreateTenant")
<form method="get">
    <div class="form-inline">
        <label class="control-label">Имя: </label>
        @Html.TextBox("name", Model.FilterViewModel.SelectedName, htmlAttributes: new { @class = "form-control" })

        <label class="control-label">Фамилия: </label>
        @Html.TextBox("surname", Model.FilterViewModel.SelectedSurname, htmlAttributes: new { @class = "form-control" })

        <label class="control-label">Отчество: </label>
        @Html.TextBox("patronymic", Model.FilterViewModel.SelectedPatronymic, htmlAttributes: new { @class = "form-control" })
        <input type="submit" value="Фильтр" class="btn btn-default" />
    </div>
</form>
<table class="table">
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.TenantIdSort)"
               asp-route-name="@(Model.FilterViewModel.SelectedName)"
               asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
               asp-route-patronymic="@(Model.FilterViewModel.SelectedPatronymic)">@Html.DisplayNameFor(model => model.Tenant.TenantId)</a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.NameSort)"
               asp-route-name="@(Model.FilterViewModel.SelectedName)"
               asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
               asp-route-patronymic="@(Model.FilterViewModel.SelectedPatronymic)">@Html.DisplayNameFor(model => model.Tenant.NameOfTenant)</a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.SurnameSort)"
               asp-route-id="@(Model.FilterViewModel.SelectedName)"
               asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
               asp-route-patronymic="@(Model.FilterViewModel.SelectedPatronymic)">@Html.DisplayNameFor(model => model.Tenant.Surname)</a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.PatronymicSort)"
               asp-route-name="@(Model.FilterViewModel.SelectedName)"
               asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
               asp-route-patronymic="@(Model.FilterViewModel.SelectedPatronymic)">@Html.DisplayNameFor(model => model.Tenant.Patronymic)</a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.ApartmentNumberSort)"
               asp-route-name="@(Model.FilterViewModel.SelectedName)"
               asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
               asp-route-patronymic="@(Model.FilterViewModel.SelectedPatronymic)">@Html.DisplayNameFor(model => model.Tenant.ApartmentNumber)</a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.NumberOfPeopleSort)"
               asp-route-name="@(Model.FilterViewModel.SelectedName)"
               asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
               asp-route-patronymic="@(Model.FilterViewModel.SelectedPatronymic)">@Html.DisplayNameFor(model => model.Tenant.NumberOfPeople)</a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.TotalAreaSort)"
               asp-route-name="@(Model.FilterViewModel.SelectedName)"
               asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
               asp-route-patronymic="@(Model.FilterViewModel.SelectedPatronymic)">@Html.DisplayNameFor(model => model.Tenant.TotalArea)</a>
        </th>
    </tr>
    @foreach (var tenant in Model.Tenants)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => tenant.TenantId)</td>
            <td>@Html.DisplayFor(modelItem => tenant.NameOfTenant)</td>
            <td>@Html.DisplayFor(modelItem => tenant.Surname)</td>
            <td>@Html.DisplayFor(modelItem => tenant.Patronymic)</td>
            <td>@Html.DisplayFor(modelItem => tenant.ApartmentNumber)</td>
            <td>@Html.DisplayFor(modelItem => tenant.NumberOfPeople)</td>
            <td>@Html.DisplayFor(modelItem => tenant.TotalArea)</td>
            <td>
                @Html.ActionLink("Edit", "EditTenant", new { id = tenant.TenantId}, null) |
                @Html.ActionLink("Delete", "DeleteTenant", new { id = tenant.TenantId })
            </td>
        </tr>
    }
</table>
<page-link page-model="Model.PageViewModel" page-action="Index"
           page-url-name="@(Model.FilterViewModel.SelectedName)"
           page-url-surname="@(Model.FilterViewModel.SelectedSurname)"
           page-url-patronymic="@(Model.FilterViewModel.SelectedPatronymic)"
           page-url-sortOrder="@(Model.SortViewModel.Current)"></page-link>